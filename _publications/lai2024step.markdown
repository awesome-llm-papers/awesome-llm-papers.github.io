---
layout: publication
title: 'Step-dpo: Step-wise Preference Optimization For Long-chain Reasoning Of Llms'
authors: Xin Lai, Zhuotao Tian, Yukang Chen, Senqiao Yang, Xiangru Peng, Jiaya Jia
conference: No Venue
year: 2024
bibkey: lai2024step
additional_links: [{name: Code, url: 'https://github.com/dvlab-research/Step-DPO'},
  {name: Code, url: 'https://huggingface.co/discussions/paper/667e1ec8b3072cb50c79ef9a'},
  {name: Paper, url: 'https://arxiv.org/abs/hf2406.18629'}]
tags: ["Evaluation", "Has Code", "Model Architecture"]
short_authors: Lai et al.
---
Mathematical reasoning presents a significant challenge for Large Language Models (LLMs) due to the extensive and precise chain of reasoning required for accuracy. Ensuring the correctness of each reasoning step is critical. To address this, we aim to enhance the robustness and factuality of LLMs by learning from human feedback. However, Direct Preference Optimization (DPO) has shown limited benefits for long-chain mathematical reasoning, as models employing DPO struggle to identify detailed errors in incorrect answers. This limitation stems from a lack of fine-grained process supervision. We propose a simple, effective, and data-efficient method called Step-DPO, which treats individual reasoning steps as units for preference optimization rather than evaluating answers holistically. Additionally, we have developed a data construction pipeline for Step-DPO, enabling the creation of a high-quality dataset containing 10K step-wise preference pairs. We also observe that in DPO, self-generated data is more effective than data generated by humans or GPT-4, due to the latter's out-of-distribution nature. Our findings demonstrate that as few as 10K preference data pairs and fewer than 500 Step-DPO training steps can yield a nearly 3% gain in accuracy on MATH for models with over 70B parameters. Notably, Step-DPO, when applied to Qwen2-72B-Instruct, achieves scores of 70.8% and 94.0% on the test sets of MATH and GSM8K, respectively, surpassing a series of closed-source models, including GPT-4-1106, Claude-3-Opus, and Gemini-1.5-Pro. Our code, data, and models are available at https://github.com/dvlab-research/Step-DPO.

https://huggingface.co/discussions/paper/667e1ec8b3072cb50c79ef9a